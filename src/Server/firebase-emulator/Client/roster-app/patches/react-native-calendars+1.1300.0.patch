diff --git a/node_modules/react-native-calendars/src/agenda/reservation-list/reservation.js b/node_modules/react-native-calendars/src/agenda/reservation-list/reservation.js
index bc1e2c0..1eb0d70 100644
--- a/node_modules/react-native-calendars/src/agenda/reservation-list/reservation.js
+++ b/node_modules/react-native-calendars/src/agenda/reservation-list/reservation.js
@@ -22,32 +22,32 @@ class Reservation extends Component {
         super(props);
         this.style = styleConstructor(props.theme);
     }
-    shouldComponentUpdate(nextProps) {
-        const d1 = this.props.date;
-        const d2 = nextProps.date;
-        const r1 = this.props.item;
-        const r2 = nextProps.item;
-        let changed = true;
-        if (!d1 && !d2) {
-            changed = false;
-        }
-        else if (d1 && d2) {
-            if (d1.getTime() !== d2.getTime()) {
-                changed = true;
-            }
-            else if (!r1 && !r2) {
-                changed = false;
-            }
-            else if (r1 && r2) {
-                if ((!d1 && !d2) || (d1 && d2)) {
-                    if (isFunction(this.props.rowHasChanged)) {
-                        changed = this.props.rowHasChanged(r1, r2);
-                    }
-                }
-            }
-        }
-        return changed;
-    }
+    // shouldComponentUpdate(nextProps) {
+    //     const d1 = this.props.date;
+    //     const d2 = nextProps.date;
+    //     const r1 = this.props.item;
+    //     const r2 = nextProps.item;
+    //     let changed = true;
+    //     if (!d1 && !d2) {
+    //         changed = false;
+    //     }
+    //     else if (d1 && d2) {
+    //         if (d1.getTime() !== d2.getTime()) {
+    //             changed = true;
+    //         }
+    //         else if (!r1 && !r2) {
+    //             changed = false;
+    //         }
+    //         else if (r1 && r2) {
+    //             if ((!d1 && !d2) || (d1 && d2)) {
+    //                 if (isFunction(this.props.rowHasChanged)) {
+    //                     changed = this.props.rowHasChanged(r1, r2);
+    //                 }
+    //             }
+    //         }
+    //     }
+    //     return changed;
+    // }
     renderDate() {
         const { item, date, renderDay } = this.props;
         if (isFunction(renderDay)) {
